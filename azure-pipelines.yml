trigger:
  batch: true
  branches:
    include:
      - master
      - develop
  paths:
    exclude:
      - README.md
      - doc/*
      - .github/*

pr:
  branches:
    include:
      - develop
      - master
  paths:
    exclude:
      - README.md
      - doc/*

variables:
  - group: 'External Resources'
  - name: vmImage
    value: 'ubuntu-latest'  # see https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml&viewFallbackFrom=vsts
  - name: rgName
    value: 'storagenet-deleteme'
  - name: v
    value: '9.2.0'
  - name: av
    value: '9.0.0'
  - name: pv
    value: '9.2.7-preview-03'

stages:
- stage: Build
  jobs:
  - job: Core
    pool:
      vmImage: $(vmImage)

    steps:

    - script: echo "##vso[build.updatebuildnumber]$(pv)"

    - task: DotNetCoreCLI@2
      displayName: 'Unit Tests'
      continueOnError: true
      inputs:
        command: 'test'
        projects: 'test/Storage.Net.Tests/Storage.Net.Tests.csproj'
        arguments: '-c release /p:Version=$(pv) /p:FileVersion=$(v) /p:AssemblyVersion=$(av) /p:PackageLicense="https://github.com/aloneguid/storage/blob/master/LICENSE" /p:Authors="Ivan Gavryliuk (@aloneguid)" /p:PackageIcon="http://i.isolineltd.com/nuget/storage.png"'

    - task: DotNetCoreCLI@2
      displayName: 'build all'
      inputs:
        projects: src/storage.sln
        arguments: '-c release /p:Version=$(pv) /p:FileVersion=$(v) /p:AssemblyVersion=$(av) /p:PackageLicense="https://github.com/aloneguid/storage/blob/master/LICENSE" /p:Authors="Ivan Gavryliuk (@aloneguid)" /p:PackageIcon="http://i.isolineltd.com/nuget/storage.png"'

    - task: CopyFiles@2
      displayName: 'copy generated nugets'
      inputs:
        SourceFolder: src
        Contents: '**/*.nupkg'
        TargetFolder: ' $(build.artifactstagingdirectory)'
        CleanTargetFolder: true
        OverWrite: true
        flattenFolders: true

    # we don't care if tests in other stages are not successful, we want to public this to internal testing
    - task: NuGetCommand@2
      condition: "eq(variables['Build.SourceBranch'], 'refs/heads/develop')"
      displayName: 'push to internal feed'
      continueOnError: true
      inputs:
        command: 'push'
        packagesToPush: '$(build.artifactstagingdirectory)/**/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '34dffbbb-3f23-4f93-9019-e579bf50a1ff'
        allowPackageConflicts: true


    - task: PublishBuildArtifacts@1
      displayName: 'publish nugets as artifacts'
      inputs:
        ArtifactName: nuget
      
- stage: Integration
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/develop')"
  dependsOn: []
  jobs:
  - job: Infra
    displayName: 'Build Test Infrastructure'
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy Test Azure Resources'
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'PAYG (personal)'
        subscriptionId: 'e692471f-4dba-4d86-8940-ce6cca371941'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(rgName)
        location: 'North Europe'
        templateLocation: 'Linked artifact'
        csmFile: 'infra/azure.json'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'InfraOutput'
    - task: AzurePowerShell@4
      displayName: 'Post Configure Resources'
      inputs:
        azureSubscription: 'PAYG (personal)'
        ScriptType: 'FilePath'
        ScriptPath: 'infra/postconfigure.ps1'
        ScriptArguments: '-JsonString ''$(InfraOutput)'' -RgName $(rgName)'
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
    - task: PowerShell@2
      displayName: 'Transfer Secrets to Variable Set'
      inputs:
        filePath: 'infra/infraset.ps1'
        arguments: '-JsonString ''$(InfraOutput)'' -Organisation ''aloneguid'' -Project ''AllPublic'' -GroupId ''8'' -Pat ''$(Pat)'''
        failOnStderr: true
        pwsh: true

  - job: Blobs
    displayName: 'Blobs'
    dependsOn: [ 'Infra' ]
    pool:
      vmImage: $(vmImage)
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'run tests'
      continueOnError: false
      inputs:
        command: test
        projects: test/Storage.Net.Tests.Integration/Storage.Net.Tests.Integration.csproj
        arguments: '-c release --filter Category=Blobs'
  - job: Messaging
    dependsOn: [ 'Infra' ]
    displayName: 'Messaging'
    pool:
      vmImage: $(vmImage)
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'run tests'
      continueOnError: false
      inputs:
        command: test
        projects: test/Storage.Net.Tests.Integration/Storage.Net.Tests.Integration.csproj
        arguments: '-c release --filter Category=Messenger'


- stage: Deploy
  dependsOn: ['Build', 'Integration'] 
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
  #condition: "or( eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/queuesvnext') )"
  jobs:
  - deployment: Nuget
    displayName: 'Push packages'
    pool:
      vmImage: $(vmImage)
    environment: live
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'nuget'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: NuGetCommand@2
            #condition: "or( eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/queuesvnext') )"
            displayName: nuget.org
            inputs:
              command: push
              packagesToPush: '$(System.ArtifactsDirectory)/nuget/*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'nuget.org (aloneguid)'
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'aloneguid'
              repositoryName: 'aloneguid/storage'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'userSpecifiedTag'
              tag: '$(Build.BuildNumber)'
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'issueBased'
              changeLogLabels: